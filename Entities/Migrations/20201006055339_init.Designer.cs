// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20201006055339_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Contributor", b =>
                {
                    b.Property<long>("ContributorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("ContributorId");

                    b.ToTable("Contributor");
                });

            modelBuilder.Entity("Entities.Models.ContributorPayment", b =>
                {
                    b.Property<long>("ContributorPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContributorTicketId")
                        .HasColumnType("bigint");

                    b.Property<int>("FinalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionCode")
                        .HasColumnName("transactionCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("TransactionDate")
                        .HasColumnType("bigint");

                    b.HasKey("ContributorPaymentId");

                    b.HasIndex("ContributorTicketId");

                    b.ToTable("ContributorPayment");
                });

            modelBuilder.Entity("Entities.Models.ContributorTicket", b =>
                {
                    b.Property<long>("ContributorTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContributorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MeetingTicketId")
                        .HasColumnType("bigint");

                    b.HasKey("ContributorTicketId");

                    b.HasIndex("ContributorId");

                    b.HasIndex("MeetingTicketId");

                    b.ToTable("ContributorTicket");
                });

            modelBuilder.Entity("Entities.Models.Meeting", b =>
                {
                    b.Property<long>("MeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreateDate")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("MeetingDate")
                        .HasColumnType("bigint");

                    b.Property<string>("MeetingPlace")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("MeetingTitle")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("MeetingId");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("Entities.Models.MeetingSpeaker", b =>
                {
                    b.Property<long>("MeetingSpeakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SpeakerId")
                        .HasColumnType("bigint");

                    b.HasKey("MeetingSpeakerId");

                    b.HasIndex("MeetingId");

                    b.HasIndex("SpeakerId");

                    b.ToTable("MeetingSpeaker");
                });

            modelBuilder.Entity("Entities.Models.MeetingTicket", b =>
                {
                    b.Property<long>("MeetingTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<long?>("MeetingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Price")
                        .HasColumnType("bigint");

                    b.HasKey("MeetingTicketId");

                    b.HasIndex("MeetingId");

                    b.ToTable("MeetingTicket");
                });

            modelBuilder.Entity("Entities.Models.Speaker", b =>
                {
                    b.Property<long>("SpeakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SpeakerId");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("Entities.Models.ContributorPayment", b =>
                {
                    b.HasOne("Entities.Models.ContributorTicket", "ContributorTicket")
                        .WithMany("ContributorPayment")
                        .HasForeignKey("ContributorTicketId")
                        .HasConstraintName("FK_ContributorPayment_ContributorTicket");
                });

            modelBuilder.Entity("Entities.Models.ContributorTicket", b =>
                {
                    b.HasOne("Entities.Models.Contributor", "Contributor")
                        .WithMany("ContributorTicket")
                        .HasForeignKey("ContributorId")
                        .HasConstraintName("FK_ContributorTicket_Contributor");

                    b.HasOne("Entities.Models.MeetingTicket", "MeetingTicket")
                        .WithMany("ContributorTicket")
                        .HasForeignKey("MeetingTicketId")
                        .HasConstraintName("FK_ContributorTicket_MeetingTicket");
                });

            modelBuilder.Entity("Entities.Models.MeetingSpeaker", b =>
                {
                    b.HasOne("Entities.Models.Meeting", "Meeting")
                        .WithMany("MeetingSpeaker")
                        .HasForeignKey("MeetingId")
                        .HasConstraintName("FK_MeetingSpeaker_Meeting");

                    b.HasOne("Entities.Models.Speaker", "Speaker")
                        .WithMany("MeetingSpeaker")
                        .HasForeignKey("SpeakerId")
                        .HasConstraintName("FK_MeetingSpeaker_Speaker");
                });

            modelBuilder.Entity("Entities.Models.MeetingTicket", b =>
                {
                    b.HasOne("Entities.Models.Meeting", "Meeting")
                        .WithMany("MeetingTicket")
                        .HasForeignKey("MeetingId")
                        .HasConstraintName("FK_MeetingTicket_Meeting");
                });
#pragma warning restore 612, 618
        }
    }
}
